use vit
switched to db vit
show collections;
Student
db.Student.find();
{
  _id: ObjectId('683703f38926c553b2c9806e'),
  name: 'adithya'
}
db.Student.drop();
true
show collections
db.books.insertMany(
   [{ _id: 3, title:  "SQL Performance Tuning", isbn: "0-6799-2974-6"},
   { _id: 3, title:  "SQL Trees", isbn: "0-6998-1556-8"},
   { _id: 4, title:  "SQL Graph", isbn: "0-6426-4996-0"},
   { _id: 5, title:  "NoSQL Pros", isbn: "0-9602-9886-X"}], 
   { ordered: false }
);
MongoBulkWriteError: E11000 duplicate key error collection: vit.books index: _id_ dup key: { _id: 3 }
db.books.insertMany(
   { _id: 3, title:  "SQL Trees", isbn: "0-6998-1556-8"},
   { _id: 4, title:  "SQL Graph", isbn: "0-6426-4996-0"},
   { _id: 5, title:  "NoSQL Pros", isbn: "0-9602-9886-X"}], 
   { ordered: false }
);
db.myCollection.insertOne({
  name: "Adithya Hari V",         // String
  age: 21,                        // Integer
  isStudent: true,               // Boolean
  skills: ["MongoDB", "Python"], // Array
  address: {                     // Embedded document (Object)
    city: "Chennai",
    pin: 600127
  },
  joinedOn: new Date(),          // Date
  cgpa: NumberDecimal("8.75"),   // Decimal128 (High-precision)
  phone: NumberLong("9876543210"), // Long (64-bit integer)
  nullField: null                // Null value
})
{
  acknowledged: true,
  insertedId: ObjectId('6837095471a955548b63eba8')
}
show collections;
books
myCollection
show collections;
books
myCollection
db.myCollection.find();
{
  _id: ObjectId('6837095471a955548b63eba8'),
  name: 'Adithya Hari V',
  age: 21,
  isStudent: true,
  skills: [
    'MongoDB',
    'Python'
  ],
  address: {
    city: 'Chennai',
    pin: 600127
  },
  joinedOn: 2025-05-28T13:02:12.518Z,
  cgpa: Decimal128('8.75'),
  phone: 9876543210,
  nullField: null
}
db.myCollection.insertMany([
  {
    name: "Adithya",
    age: 21,
    isStudent: true,
    hobbies: ["coding", "reading"],
    location: { city: "Chennai", state: "TN" },
    joinedOn: new Date("2023-08-01"),
    cgpa: NumberDecimal("8.9"),
    phone: NumberLong("9876543210"),
    nullField: null
  },
  {
    name: "Nila",
    age: 20,
    isStudent: true,
    hobbies: ["music", "painting"],
    location: { city: "Coimbatore", state: "TN" },
    joinedOn: new Date("2023-07-15"),
    cgpa: NumberDecimal("9.2"),
    phone: NumberLong("9876501234"),
    nullField: null
  },
  {
    name: "Ravi",
    age: 25,
    isStudent: false,
    hobbies: [],
    location: { city: "Madurai", state: "TN" },
    joinedOn: new Date("2022-12-10"),
    cgpa: NumberDecimal("7.5"),
    phone: NumberLong("9876509876"),
    nullField: null
  }
])
{
  acknowledged: true,
  insertedIds: {
    '0': ObjectId('68370a3371a955548b63eba9'),
    '1': ObjectId('68370a3371a955548b63ebaa'),
    '2': ObjectId('68370a3371a955548b63ebab')
  }
}
db.myCollection.finc()
TypeError: db.myCollection.finc is not a function
db.myCollection.find()
{
  _id: ObjectId('6837095471a955548b63eba8'),
  name: 'Adithya Hari V',
  age: 21,
  isStudent: true,
  skills: [
    'MongoDB',
    'Python'
  ],
  address: {
    city: 'Chennai',
    pin: 600127
  },
  joinedOn: 2025-05-28T13:02:12.518Z,
  cgpa: Decimal128('8.75'),
  phone: 9876543210,
  nullField: null
}
{
  _id: ObjectId('68370a3371a955548b63eba9'),
  name: 'Adithya',
  age: 21,
  isStudent: true,
  hobbies: [
    'coding',
    'reading'
  ],
  location: {
    city: 'Chennai',
    state: 'TN'
  },
  joinedOn: 2023-08-01T00:00:00.000Z,
  cgpa: Decimal128('8.9'),
  phone: 9876543210,
  nullField: null
}
{
  _id: ObjectId('68370a3371a955548b63ebaa'),
  name: 'Nila',
  age: 20,
  isStudent: true,
  hobbies: [
    'music',
    'painting'
  ],
  location: {
    city: 'Coimbatore',
    state: 'TN'
  },
  joinedOn: 2023-07-15T00:00:00.000Z,
  cgpa: Decimal128('9.2'),
  phone: 9876501234,
  nullField: null
}
{
  _id: ObjectId('68370a3371a955548b63ebab'),
  name: 'Ravi',
  age: 25,
  isStudent: false,
  hobbies: [],
  location: {
    city: 'Madurai',
    state: 'TN'
  },
  joinedOn: 2022-12-10T00:00:00.000Z,
  cgpa: Decimal128('7.5'),
  phone: 9876509876,
  nullField: null
}
db.myCollection.findOne({ name: "Adithya" })
